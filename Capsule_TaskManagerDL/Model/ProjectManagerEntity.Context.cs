//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Capsule_TaskManagerDL.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ProjectManagerEntities : DbContext
    {
        public ProjectManagerEntities()
            : base("name=ProjectManagerEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Parent_Task> Parent_Task { get; set; }
        public DbSet<Project> Projects { get; set; }
        public DbSet<Task> Tasks { get; set; }
        public DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<Nullable<int>> GET_MANAGER_DETAILS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GET_MANAGER_DETAILS");
        }
    
        public virtual ObjectResult<GET_PARENT_TASK_Result> GET_PARENT_TASK()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_PARENT_TASK_Result>("GET_PARENT_TASK");
        }
    
        public virtual ObjectResult<GET_PROJECT_DETAILS_Result> GET_PROJECT_DETAILS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_PROJECT_DETAILS_Result>("GET_PROJECT_DETAILS");
        }
    
        public virtual ObjectResult<GET_PROJECTNAME_DETAILS_Result> GET_PROJECTNAME_DETAILS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_PROJECTNAME_DETAILS_Result>("GET_PROJECTNAME_DETAILS");
        }
    
        public virtual ObjectResult<GET_TASK_DETAILS_Result> GET_TASK_DETAILS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_TASK_DETAILS_Result>("GET_TASK_DETAILS");
        }
    
        public virtual ObjectResult<GET_USER_DETAILS_Result> GET_USER_DETAILS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_USER_DETAILS_Result>("GET_USER_DETAILS");
        }
    
        public virtual int INSERT_PROJECT_DETAILS(Nullable<int> project_ID, string project, Nullable<System.DateTime> start_Date, Nullable<System.DateTime> end_Date, Nullable<int> priority, Nullable<int> manager_ID, Nullable<int> is_Active, string status)
        {
            var project_IDParameter = project_ID.HasValue ?
                new ObjectParameter("Project_ID", project_ID) :
                new ObjectParameter("Project_ID", typeof(int));
    
            var projectParameter = project != null ?
                new ObjectParameter("Project", project) :
                new ObjectParameter("Project", typeof(string));
    
            var start_DateParameter = start_Date.HasValue ?
                new ObjectParameter("Start_Date", start_Date) :
                new ObjectParameter("Start_Date", typeof(System.DateTime));
    
            var end_DateParameter = end_Date.HasValue ?
                new ObjectParameter("End_Date", end_Date) :
                new ObjectParameter("End_Date", typeof(System.DateTime));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(int));
    
            var manager_IDParameter = manager_ID.HasValue ?
                new ObjectParameter("Manager_ID", manager_ID) :
                new ObjectParameter("Manager_ID", typeof(int));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_PROJECT_DETAILS", project_IDParameter, projectParameter, start_DateParameter, end_DateParameter, priorityParameter, manager_IDParameter, is_ActiveParameter, statusParameter);
        }
    
        public virtual int INSERT_TASK_DETAILS(Nullable<int> task_ID, string task, Nullable<int> project_ID, Nullable<int> priority, Nullable<int> parent_ID, Nullable<System.DateTime> start_Date, Nullable<System.DateTime> end_Date, Nullable<int> user_ID, Nullable<int> status, Nullable<int> is_Active, string action)
        {
            var task_IDParameter = task_ID.HasValue ?
                new ObjectParameter("Task_ID", task_ID) :
                new ObjectParameter("Task_ID", typeof(int));
    
            var taskParameter = task != null ?
                new ObjectParameter("Task", task) :
                new ObjectParameter("Task", typeof(string));
    
            var project_IDParameter = project_ID.HasValue ?
                new ObjectParameter("Project_ID", project_ID) :
                new ObjectParameter("Project_ID", typeof(int));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(int));
    
            var parent_IDParameter = parent_ID.HasValue ?
                new ObjectParameter("Parent_ID", parent_ID) :
                new ObjectParameter("Parent_ID", typeof(int));
    
            var start_DateParameter = start_Date.HasValue ?
                new ObjectParameter("Start_Date", start_Date) :
                new ObjectParameter("Start_Date", typeof(System.DateTime));
    
            var end_DateParameter = end_Date.HasValue ?
                new ObjectParameter("End_Date", end_Date) :
                new ObjectParameter("End_Date", typeof(System.DateTime));
    
            var user_IDParameter = user_ID.HasValue ?
                new ObjectParameter("User_ID", user_ID) :
                new ObjectParameter("User_ID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(int));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_TASK_DETAILS", task_IDParameter, taskParameter, project_IDParameter, priorityParameter, parent_IDParameter, start_DateParameter, end_DateParameter, user_IDParameter, statusParameter, is_ActiveParameter, actionParameter);
        }
    
        public virtual int INSERT_USER_DETAILS(Nullable<int> user_ID, string first_Name, string last_Name, Nullable<int> employee_ID, Nullable<int> project_ID, Nullable<int> task_ID, string action)
        {
            var user_IDParameter = user_ID.HasValue ?
                new ObjectParameter("User_ID", user_ID) :
                new ObjectParameter("User_ID", typeof(int));
    
            var first_NameParameter = first_Name != null ?
                new ObjectParameter("First_Name", first_Name) :
                new ObjectParameter("First_Name", typeof(string));
    
            var last_NameParameter = last_Name != null ?
                new ObjectParameter("Last_Name", last_Name) :
                new ObjectParameter("Last_Name", typeof(string));
    
            var employee_IDParameter = employee_ID.HasValue ?
                new ObjectParameter("Employee_ID", employee_ID) :
                new ObjectParameter("Employee_ID", typeof(int));
    
            var project_IDParameter = project_ID.HasValue ?
                new ObjectParameter("Project_ID", project_ID) :
                new ObjectParameter("Project_ID", typeof(int));
    
            var task_IDParameter = task_ID.HasValue ?
                new ObjectParameter("Task_ID", task_ID) :
                new ObjectParameter("Task_ID", typeof(int));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_USER_DETAILS", user_IDParameter, first_NameParameter, last_NameParameter, employee_IDParameter, project_IDParameter, task_IDParameter, actionParameter);
        }
    
        public virtual int UPDATE_END_TASK(Nullable<int> task_ID, Nullable<System.DateTime> end_Date)
        {
            var task_IDParameter = task_ID.HasValue ?
                new ObjectParameter("Task_ID", task_ID) :
                new ObjectParameter("Task_ID", typeof(int));
    
            var end_DateParameter = end_Date.HasValue ?
                new ObjectParameter("End_Date", end_Date) :
                new ObjectParameter("End_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_END_TASK", task_IDParameter, end_DateParameter);
        }
    }
}
